letter,letter_digit,character,string_sequence,string,integer,sign,no,digit,nz_digit,dig_seq,boolean,identifier,logical_operator,relation,program,stmt,simple_stmt,declaration_stmt,type,generic_type,array_declaration,assignment_stmt,expression,expression_sequence,expression_sign,in_out,io_stmt,struct_stmt,if_stmt,while_stmt,condition,logical_operator
+,-,*,/,%,=,==,<,<=,>=,>,<>,&&,||,!,>>,<<,:,;,[,],{,},',",if,else,int,char,bool,while,@,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,7,8,9
program
letter,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z
digit,0,1,2,3,4,5,6,7,8,9
letter_digit,letter,digit
character,'.letter_digit.'
string_sequence,letter_digit,letter_digit.string_sequence
string,".string_sequence."
integer,0,sign.no,no
sign,+,-
no,digit,nz_digit.no
nz_digit,1,2,3,4,5,6,7,8,9
dig_seq,digit,digit.dig_seq
boolean,0,1
identifier,letter,letter.string_sequence
logical_operator,&&,||
relation,<,<=,==,<>,>=,>
program,{.stmt.}
stmt,simple_stmt.stmt,struct_stmt.stmt
simple_stmt,declaration_stmt.;,assignment_stmt.;,io_stmt.;
declaration_stmt,@.identifier.:.type
type,generic_type,array_declaration
generic_type,bool,char,int
array_declaration,generic_type.[.no.]
assignment_stmt,identifier.=.expression
expression,expression_sign.expression_sequence
expression_sequence,expression_sign,identifier,no,expression_sign.expression_sequence,identifier.expression_sequence,no.expression_sequence
expression_sign,+,-,*,/
in_out,>>,<<
io_stmt,in_out.identifier,in_out.string,in_out.character
struct_stmt,if_stmt,while_stmt
if_stmt,if.condition.{.stmt.},if.condition.{.stmt.}.else.{.stmt.}
while_stmt,while.condition.{.stmt.}
condition,expression.relation.expression,expression.relation.expression.logical_operator.condition
